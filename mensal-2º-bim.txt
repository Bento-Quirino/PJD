Questão 1) Assinale a alternativa que indica a somatória de todos os restos da divisão do intervalo 0-100 com o número 3 (1,0 Ponto):
Solução:
Intervalo de 0 - 100, pressupõe que temos números de 0 a 100 (0, 1, 2,..., 99, 100).
Somatória, significa que devemos fazer sucessivas somas, acumuladas.
Portanto, o enunciado pede que calculemos o resto da divisão de cada elemento do intervalo com 3, e adicionamos o resultado acumulado ao longo do tempo.
O 'for' permite que repetimos a divisão diversas vezes, e contemos o número de repetições. Dessa forma, podemos contar os números dentro do intervalo pedido.

soma = 0 # variável que vai guardar a somatória
for i in range(0, 101): # 101, porque range() exclui o último número
  resto = i % 3
  soma = soma + resto

print(soma) # exibe o valor final

a) 0 
b) 15 
c) 60 
d) 100 < - correta

Dada a lista [8, 0.1, 7, 2, 0.75, 2, 12, 0.02, 4, 1, 2, 10, 0.3, 5, 6, 4, 11, 0.45, 3, 7, 8, 1, 0.7], responda as questões a seguir 

Questão 2) Calcule a divisão entre os elementos, de modo que o resultado da divisão entre o 1º e o 2º número deve ser dividido pelo 3º,
esse resultado deve ser dividido pelo 4º, e assim por diante. Indique o resultado obtido. Obs.: 1e3 = 1 x 10³ (1,0 Ponto):
Solução:
O exercício pede o resultado da divisão entre os primeiros dois elementos 'resultado = lista[0] / lista[1]'. Na sequencia, ele quer que
usemos esse resultado para dividir o 3º elementos, ou seja, 'resultado / lista[2]'. O resultado dessa divisão deve dividir o próximo,
resultado = resultado / lista[2]
resultado = resultado / lista[3], e assim sucessivamente até o último elemento.
Podemos usar o 'for' para andar pelos elementos da lista fornecida.

resultado = lista[0] / lista[1]
# range() começa em 2 porque os dois primeiros elementos já foram usados
for i in range(2, len(lista)):
    resultado = resultado / lista[i]
    
valor final de 'resultado' é ~9.468e-06
 

Questão 3) Itere sobre a lista usando duas variáveis de controle, uma para índices pares,
e outro para índices ímpares.
Escolha a alternativa que contém a multiplicação dos valores em índices pares
elevado a multiplicação dos valores de índices ímpares (1,0 Ponto): 

para usar duas variáveis de controle, podemos apenas adicionar uma variável separando-a com vírgula ' for i, j in ...'.
é possível usar zip, e colocar dois range() dentro dele, cada um com um incremento diferente, iniciando de um índice diferente:
'range(0, len(lista), 2)' iniciara o for no índice 0, e andar de dois em dois, então de 0 para 2, depois 4, 6, e assim por diante;
'range(1, len(lista), 2)' iniciará o for no índice 1, e andar de dois em dois, então de 1 para 3, depois 5, depois 7, e etc..

par = impar = 1
for i, j in zip(range(0, len(lista), 2), range(1, len(lista), 2)):
    par = par * lista[i]
    impar = impar * lista[j]
    
print(par ** impar) # resultado final é ~4.6e+31


Questão 4) Crie uma lista contendo a lista original invertida.
Assinale a opção que contém a soma calculada a partir do resto da divisão formado pela lista original
e pela lista invertida (para cada índice).
Considere que as divisões por zero resultam em zero. (1,0 Ponto): 

# Crie uma lista contendo a lista original invertida -> ou seja, uma cópia invertendo a ordem dos índices
inverse = []
# for na direçao inversa: inicia no último índice e anda até o primeiro (-1 - 1, o range exclui o último número)
# e o incremento faz o i andar para trás, pois é -1
for i in range(len(lista) - 1, -1, -1):
    inverse.append(i)

#O enunciado então pede a soma do resto da divisão da lista original pela lista invertida.
#A soma é o número final, portanto, o resto da divisão deve ser aplicado entre os elementos,
#e o resultado acumulado como soma, semelhante a primeira questão.

#como ambos tem o mesmo tamanho, podemos usar apenas um for simples
soma = 0
for i in range(0, len(lista)):
    # caso o divisor seja zero
    if inverse[i] == 0:
        # não é necessário adicionar valor, porque será considerado zero
        continue
    
    resto = lista[i] % inverse[i]
    soma = soma + resto

print(soma) # valor final é 73.62



Considere a lista ["Ana", "Carlos", "Beatriz", "Daniel", "Eduardo", "Fernanda", "Gustavo", "Helena"] para as próximas questões 

Questão 5) Escolha a alternativa que apresente a letra central (mediana), se todos os nomes fossem concatenados (1,0 Ponto): 

# Mediana é o valor que separa a metade maior e a metade menor de um conjunto de elementos.
# Mediana pode ser o valor do meio de um conjunto de dados. No conjunto de dados {1, 3, 3, 6, 7, 8, 9}, por exemplo, a mediana é 6.
# Se o número de elementos for par, não há um único valor do meio.
# Então, a mediana é definida como a média dos dois valores do meio.
# No conjunto de dados {3, 5, 7, 9}, a mediana é (5 + 7) / 2 = 6.

# Neste caso as alternativas só possuem uma letra, por tanto é importe observamos quais letras podem ser a mediana.
# Primeiro, vamos ver se o numero de letras é par
print(len(lista))

# o numero de letras é 50, par. Se dividirmos por 2, temos o índice 25.
# se contamos baseado em 0, a posição 25 é 'lista[24]', ou seja, letra 'u'
# podemos testar isso em código da seguinte forma

tamanho = len(lista)
for i in range(0, tamanho / 2):
    print(i) # o último elemento estára no índice 24
    
# se contassemos a partir de 1, não teria alternativa válida.

a) o 
b) E 
c) u <- correta
d) F 

 

Questão 6) Escolha a alternativa que apresente a letra central (mediana) da concatenação de todas as letras da lista original. Cada letra deve ser intercalada entre início e fim, ou seja, a primeira letra é a primeira letra do primeiro nome, a segunda letra é a última letra do último nome, a terceira letra, a segunda letra do primeiro nome, e assim por diante (1,0 Ponto): 

#Escolha a alternativa que apresente a letra central (mediana) da concatenação de todas as letras da lista original.
#Cada letra deve ser intercalada entre início e fim, ou seja, a primeira letra é a primeira letra do primeiro nome,
#a segunda letra é a última letra do último nome, a terceira letra, a segunda letra do primeiro nome, e assim por diante

# ou seja, o que a questão é montar uma lista da seguinte forma:
# ['AannaeClaerH..., intercalando as letras a partir das pontas.
# primeiro podemos concatenar tudo
concatenado = ""
for i in range(0, len(lista)):
    concatenado = concatenado + lista[i]

# depois podemos fazer as iterações igual as questões 3 e 4, juntando duas variáveis
# e colocando a segunda para iterar no sentido contrário
intercalado = ""
for i, j in zip(range(0, 25), range(49, 24, -1)):
    intercalado = intercalado + concatenado[i]
    intercalado = intercalado + concatenado[j]

# agora concatenado possui a junção pedida. podemos então fazer o mesmo da questão anterior para achar a mediana.
tamanho = len(intercalado)
mediana = 0
for i in range(0, int(tamanho / 2)):
    mediana = i
    
print(intercalado[mediana])

a) t <- correta
b) u 
c) E 
d) o 


Questão 7) Qual o índice da letra 'z' na concatenação inversa de todos os nomes? (1,0 Ponto): 

concatenado = ""
for i in range(0, len(lista)):
    concatenado = concatenado + lista[i]

# podemos iterar no sentido contrário, verificando se lista[i] == z
for i in range(len(concatenado) - 1, -1, -1):
    if concatenado[i] == "z":
        print(i)
        break

a) 15ª <- correta
b) 16ª 
c) 37ª 
d) 40ª 
 

Questão 8) Qual é a principal diferença entre as estruturas for e if-else em Python? (1,0 Ponto): 

a) for é usado para repetição, enquanto if-else para tomada de decisão. <- correta
b) for e if-else são usados para a mesma finalidade: repetição de código. 
c) if-else pode iterar sobre listas, enquanto for verifica condições. 
d) for só funciona com números, e if-else com strings. 

 

Questão 9) Como podemos usar uma variável de controle para modificar uma lista em Python? (1,0 Ponto): 

a) Usando a variável como índice para acessar e alterar elementos diretamente (ex: lista[i] = novo_valor). <- correta
b) A variável de controle não pode modificar listas, apenas strings. 
c) Atribuindo a lista inteira à variável de controle (ex: variavel = lista). 
d) Utilizando a variável apenas para contar elementos, sem alterá-los. 

 

Questão 10) O que ocorre quando usamos índices negativos em uma lista no Python? (1,0 Ponto): 

a) Gera um erro de sintaxe, pois índices negativos são inválidos 
b) Acessa os elementos a partir do final da lista (-1 = último elemento) <- correta
c) Converte automaticamente para positivo (ex: -2 vira 2) 
d) Retorna sempre o primeiro elemento, independentemente do valor 

