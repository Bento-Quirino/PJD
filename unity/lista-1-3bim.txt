1. Python é fortemente e dinamicamente tipado. C# é fortemente, mas estaticamente tipado. O que isso significa?
2. Como é feita a declaração de variáveis em Python comparada com C#? Dê exemplos para cada tipo de valor existente, nas duas linguagens.
- Para declarar uma variável em C#, seguimos a regra "<tipo> <nome>;"
exemlpo: string name;
- Estaticamente tipada significa que suas variáveis tem tipo estático, ou seja, o tipo definido
na declaração é eterno dentro do código, portanto, uma mesma variável, nunca poderá
armazenar valor de um tipo diferente do inicial.

3. Qual a diferença entre indentação obrigatória (Python) e blocos delimitados por {} (C#)?
- A indentação definia o escopo das funções. Em C# quem faz esse papel são as chaves, que delimitam
o que faz parte de cada classe, método ou estrutura de execução de código.

4. Como você escreve uma estrutura de condição if em C# para checar se x é maior que 5?
if(x > 5) { /* (...) */ }

5. Como se declara uma função que soma dois números e retorna o resultado em Python e em C#?

6. Python tem listas. Qual o equivalente em C#?

7. O Python possui mais de uma forma de usar 'for'. Explique e dê exemplos das formas de usar 'for' no C#.

8. Como você declara um array de strings chamado "nomes" com três elementos? Escreva como é em Python e em C#.

9. Explique o que são tipos de valor e tipos de referência em C#.
- Referência é um tipo de valor que guarda o endeerço de memória de objetos (de classes).
Isso permite que uam variável desse tipo possa não guardar valor algum (ser nula).
- Tipo valor é uma variável que armazena valor, e por definição, nunca poderá ser nula

10. O que é null em C#, e qual o comportamento ao acessar um método de um objeto nulo?
É a ausência de valor. Quando se tenta acessar uma variável que tenha valor null, o Unity trava
a execução do jogo, ou em um programa, ele é encerrado pelo windows

11. Cite pelo menos um cenário em que Python seria preferível a C#, e por quê.
- Quando você precisa de praticidade, semântica menos complicada, e menor necessidade
de velocidade e processamento - processamento assíncrono de dados.

12. Cite duas diferenças entre C# e Python quanto à tipagem de variáveis.

13. Em C#, como você define uma função que retorna um bool e recebe um string como parâmetro?

14. O que é o Unity? (definição breve)
- Unity é um motor de jogo. Significa que ele é um programa que de fazer jogo
que concentra diversas ferramentas específicas para essa finalidade.
  Por exemplo, para simular física, o Unity usa um motor de física;
para renderizar objetos em cena, ele utiliza API's específicas para
comunicação com a placa de vídeo.

15. O que são GameObjects e Componentes em Unity? Como se relacionam?
- GameObjects são objetos de cena do Unity.
- Componentes são objetos, vinculados à GameObject, que dão aos GameObject
funções ou rotinas específicas, que permitem que eles executem alguma ação.

16. Qual componente todo objeto 3D deve ter?
17. Qual a função do Transform e sua versão 2D (RectTransform)?
- Transform. Esse componente é necessário para dar aos GameObjects
atributos e métodos relacionados a transformações geométricas.
  Para que um objeto exista em cena, obrigatoriamente, ele será posicionado
em algum lugar dessa cena. Essa informação, quem dá ao GameObject, é
o componente Transform.
  RectTransform faz a mesma coisa que o Transform, mas para objetos
da GUI.

18. Explique a relação entre Componentes e Classes.
- Todo Componente é, por definição, uma classe - tanto os Componentes nativos do Unity
quanto o código que os programadores criam. Ao adicionar um componente em um GameObject
esse componente para ser usado pelo GameObejct é instanciado como objeto,
e portanto, é possível acessar e usar esse componente como objeto através dos códigos.

19. Explique o que é classe, objeto, atributos e métodos, em POO.
- Classe: classes em POO representam um "molde" para criação de objetos.
  Em geral, a classe declara quais informações um objeto carrega.
- Objeto: representam exemplares de uma classe. Equanto a classe declara
  as informações, cada objeto carrega o valor de tais informações.
- Atributos: são características que um objeto tem.
- Métodos são rotinas que um objeto executa. Em outras palavras, coisas
  que um objeto faz.

Enviar todas as respostas para marcos.prof.cps@bentoquirino.com.br
Assunto "Lista 3º Bim PJD".
